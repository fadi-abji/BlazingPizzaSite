@using BlazingPizzaSite.Model
@using Microsoft.AspNetCore.Components.Web
@rendermode RenderMode.InteractiveServer

<div class="dialog-container">
    <div class="dialog">
        <div class="dialog-title">
            <h2>@Pizza.Special.Name</h2>
            @Pizza.Special.Description
        </div>
        <form class="dialog-body">
            <div>
                @if (supportSizing)
                {
                    <label>Size:</label>
                    <input type="range" min="@Pizza.MinimumSize" max="@Pizza.MaximumSize"
                           step="1" @bind="Pizza.Size" @bind:event="oninput" />
                }
                <span class="size-label">
                    @(Pizza.Size)" ( @(Pizza.GetFormattedTotalPrice()) kr)
                </span>
            </div>
        </form>

        <div class="dialog-buttons d-flex justify-content-between align-items-center">
            <button class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
            <span>
                Price: <span><b>@(Pizza.GetFormattedTotalPrice()) kr</b></span>
            </span>
            <button class="btn btn-success" @onclick="OnConfirm">Order ></button>
        </div>
    </div>
</div>


@code {
    [Parameter] public Pizza Pizza { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }


    bool supportSizing = true;

    protected override void OnInitialized()
    {
        if (Pizza is { Special.FixedSize: not null })
        {
            Pizza.Size = Pizza.Special.FixedSize.Value;
            supportSizing = false;
        }
    }
}
